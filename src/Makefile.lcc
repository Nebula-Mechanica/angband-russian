#
# Makefile for Angband using the lcc32 compiler
#

#
# Change these paths if necessary
#
ANGBAND_PATH = C:\angband
LCC_PATH     = C:\lcc


#
# You shouldn't need to change anything below
#

SRCDIR = $(ANGBAND_PATH)\src
LINKER = $(LCC_PATH)\bin\lcclnk.exe
CC     = $(LCC_PATH)\bin\lcc.exe
RC     = $(LCC_PATH)\bin\lrc.exe
LIBS   = $(LCC_PATH)\lib\winmm.lib
CFLAGS = -I$(LCC_PATH)\include -I$(SRCDIR)\lua


OBJS=\
	z-virt.obj \
	z-util.obj \
	z-term.obj \
	z-rand.obj \
	z-form.obj \
	xtra2.obj \
	xtra1.obj \
	x-spell.obj \
	wizard2.obj \
	wizard1.obj \
	variable.obj \
	util.obj \
	use-obj.obj \
	tables.obj \
	store.obj \
	spells2.obj \
	spells1.obj \
	script.obj \
	save.obj \
	readdib.obj \
	randart.obj \
	object2.obj \
	object1.obj \
	obj-info.obj \
	monster2.obj \
	monster1.obj \
	melee2.obj \
	melee1.obj \
	main-win.obj \
	main.obj \
	l-ui.obj \
	tolua_tt.obj \
	tolua_tm.obj \
	tolua_rg.obj \
	tolua_lb.obj \
	tolua_gp.obj \
	tolua_eh.obj \
	tolua_bd.obj \
	lzio.obj \
	lvm.obj \
	lundump.obj \
	ltm.obj \
	ltable.obj \
	lstrlib.obj \
	lstring.obj \
	lstate.obj \
	lparser.obj \
	lobject.obj \
	lmem.obj \
	llex.obj \
	lgc.obj \
	lfunc.obj \
	ldo.obj \
	ldebug.obj \
	ldblib.obj \
	lcode.obj \
	lbaselib.obj \
	lauxlib.obj \
	lapi.obj \
	l-spell.obj \
	l-random.obj \
	l-player.obj \
	l-object.obj \
	load.obj \
	l-monst.obj \
	l-misc.obj \
	init2.obj \
	init1.obj \
	generate.obj \
	files.obj \
	dungeon.obj \
	cmd6.obj \
	cmd5.obj \
	cmd4.obj \
	cmd3.obj \
	cmd2.obj \
	cmd1.obj \
	cave.obj \
	birth.obj \
	angband.res

angband.exe:	$(OBJS)
	$(LINKER)  -subsystem windows -o $(ANGBAND_PATH)\angband.exe $(OBJS) $(LIBS)

# Build Z-VIRT.C
Z-VIRT_C=\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\

z-virt.obj: $(Z-VIRT_C) $(SRCDIR)\z-virt.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\z-virt.c

# Build Z-UTIL.C
Z-UTIL_C=\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\

z-util.obj: $(Z-UTIL_C) $(SRCDIR)\z-util.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\z-util.c

# Build Z-TERM.C
Z-TERM_C=\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\

z-term.obj: $(Z-TERM_C) $(SRCDIR)\z-term.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\z-term.c

# Build Z-RAND.C
Z-RAND_C=\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\

z-rand.obj: $(Z-RAND_C) $(SRCDIR)\z-rand.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\z-rand.c

# Build Z-FORM.C
Z-FORM_C=\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\

z-form.obj: $(Z-FORM_C) $(SRCDIR)\z-form.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\z-form.c

# Build XTRA2.C
XTRA2_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

xtra2.obj: $(XTRA2_C) $(SRCDIR)\xtra2.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\xtra2.c

# Build XTRA1.C
XTRA1_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\
	$(SRCDIR)\script.h\
	$(SRCDIR)\angband.h\

xtra1.obj: $(XTRA1_C) $(SRCDIR)\xtra1.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\xtra1.c

# Build X-SPELL.C
X-SPELL_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

x-spell.obj: $(X-SPELL_C) $(SRCDIR)\x-spell.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\x-spell.c

# Build WIZARD2.C
WIZARD2_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\
	$(SRCDIR)\script.h\
	$(SRCDIR)\angband.h\

wizard2.obj: $(WIZARD2_C) $(SRCDIR)\wizard2.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\wizard2.c

# Build WIZARD1.C
WIZARD1_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

wizard1.obj: $(WIZARD1_C) $(SRCDIR)\wizard1.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\wizard1.c

# Build VARIABLE.C
VARIABLE_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

variable.obj: $(VARIABLE_C) $(SRCDIR)\variable.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\variable.c

# Build UTIL.C
UTIL_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

util.obj: $(UTIL_C) $(SRCDIR)\util.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\util.c

# Build USE-OBJ.C
USE-OBJ_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

use-obj.obj: $(USE-OBJ_C) $(SRCDIR)\use-obj.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\use-obj.c

# Build TABLES.C
TABLES_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

tables.obj: $(TABLES_C) $(SRCDIR)\tables.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\tables.c

# Build STORE.C
STORE_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

store.obj: $(STORE_C) $(SRCDIR)\store.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\store.c

# Build SPELLS2.C
SPELLS2_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

spells2.obj: $(SPELLS2_C) $(SRCDIR)\spells2.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\spells2.c

# Build SPELLS1.C
SPELLS1_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

spells1.obj: $(SPELLS1_C) $(SRCDIR)\spells1.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\spells1.c

# Build SCRIPT.C
SCRIPT_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\
	$(SRCDIR)\script.h\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lualib.h\
	$(SRCDIR)\lua\lauxlib.h\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\lua\luadebug.h\

script.obj: $(SCRIPT_C) $(SRCDIR)\script.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\script.c

# Build SAVE.C
SAVE_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

save.obj: $(SAVE_C) $(SRCDIR)\save.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\save.c

# Build READDIB.C
READDIB_C=\
	$(SRCDIR)\readdib.h\

readdib.obj: $(READDIB_C) $(SRCDIR)\readdib.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\readdib.c

# Build RANDART.C
RANDART_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\
	$(SRCDIR)\init.h\
	$(SRCDIR)\h-basic.h\

randart.obj: $(RANDART_C) $(SRCDIR)\randart.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\randart.c

# Build OBJECT2.C
OBJECT2_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

object2.obj: $(OBJECT2_C) $(SRCDIR)\object2.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\object2.c

# Build OBJECT1.C
OBJECT1_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

object1.obj: $(OBJECT1_C) $(SRCDIR)\object1.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\object1.c

# Build OBJ-INFO.C
OBJ-INFO_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

obj-info.obj: $(OBJ-INFO_C) $(SRCDIR)\obj-info.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\obj-info.c

# Build MONSTER2.C
MONSTER2_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

monster2.obj: $(MONSTER2_C) $(SRCDIR)\monster2.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\monster2.c

# Build MONSTER1.C
MONSTER1_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

monster1.obj: $(MONSTER1_C) $(SRCDIR)\monster1.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\monster1.c

# Build MELEE2.C
MELEE2_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

melee2.obj: $(MELEE2_C) $(SRCDIR)\melee2.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\melee2.c

# Build MELEE1.C
MELEE1_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

melee1.obj: $(MELEE1_C) $(SRCDIR)\melee1.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\melee1.c

# Build MAIN-WIN.C
MAIN-WIN_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\
	$(SRCDIR)\readdib.h\

main-win.obj: $(MAIN-WIN_C) $(SRCDIR)\main-win.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\main-win.c

# Build MAIN.C
MAIN_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

main.obj: $(MAIN_C) $(SRCDIR)\main.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\main.c

# Build L-UI.C
L-UI_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

l-ui.obj: $(L-UI_C) $(SRCDIR)\l-ui.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\l-ui.c

# Build TOLUA_TT.C
TOLUA_TT_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\tolua_tt.h\
	$(SRCDIR)\lua\tolua_tm.h\
	$(SRCDIR)\lua\tolua_eh.h\
	$(SRCDIR)\lua\tolua_rg.h\

tolua_tt.obj: $(TOLUA_TT_C) $(SRCDIR)\lua\tolua_tt.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\tolua_tt.c

# Build TOLUA_TM.C
TOLUA_TM_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\tolua_tm.h\
	$(SRCDIR)\lua\tolua_tt.h\
	$(SRCDIR)\lua\tolua_rg.h\

tolua_tm.obj: $(TOLUA_TM_C) $(SRCDIR)\lua\tolua_tm.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\tolua_tm.c

# Build TOLUA_RG.C
TOLUA_RG_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\tolua_rg.h\
	$(SRCDIR)\lua\tolua_tm.h\
	$(SRCDIR)\lua\tolua_tt.h\

tolua_rg.obj: $(TOLUA_RG_C) $(SRCDIR)\lua\tolua_rg.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\tolua_rg.c

# Build TOLUA_LB.C
TOLUA_LB_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\tolua_rg.h\
	$(SRCDIR)\lua\tolua_tm.h\
	$(SRCDIR)\lua\tolua_tt.h\

tolua_lb.obj: $(TOLUA_LB_C) $(SRCDIR)\lua\tolua_lb.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\tolua_lb.c

# Build TOLUA_GP.C
TOLUA_GP_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\tolua_tm.h\

tolua_gp.obj: $(TOLUA_GP_C) $(SRCDIR)\lua\tolua_gp.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\tolua_gp.c

# Build TOLUA_EH.C
TOLUA_EH_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\tolua_eh.h\
	$(SRCDIR)\lua\tolua_rg.h\

tolua_eh.obj: $(TOLUA_EH_C) $(SRCDIR)\lua\tolua_eh.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\tolua_eh.c

# Build TOLUA_BD.C
TOLUA_BD_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\lua\lua.h\

tolua_bd.obj: $(TOLUA_BD_C) $(SRCDIR)\lua\tolua_bd.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\tolua_bd.c

# Build LZIO.C
LZIO_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lzio.h\

lzio.obj: $(LZIO_C) $(SRCDIR)\lua\lzio.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lzio.c

# Build LVM.C
LVM_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lapi.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\ldebug.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\ldo.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lfunc.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lgc.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lopcodes.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lstring.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\ltable.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\ltm.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lvm.h\
	$(SRCDIR)\lua\ldo.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\ltm.h\

lvm.obj: $(LVM_C) $(SRCDIR)\lua\lvm.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lvm.c

# Build LUNDUMP.C
LUNDUMP_C=\
	$(SRCDIR)\lua\lfunc.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lopcodes.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lstring.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lundump.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lzio.h\

lundump.obj: $(LUNDUMP_C) $(SRCDIR)\lua\lundump.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lundump.c

# Build LTM.C
LTM_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\ldo.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\ltm.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\

ltm.obj: $(LTM_C) $(SRCDIR)\lua\ltm.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\ltm.c

# Build LTABLE.C
LTABLE_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lstring.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\ltable.h\
	$(SRCDIR)\lua\lobject.h\

ltable.obj: $(LTABLE_C) $(SRCDIR)\lua\ltable.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\ltable.c

# Build LSTRLIB.C
LSTRLIB_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lauxlib.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lualib.h\
	$(SRCDIR)\lua\lua.h\

lstrlib.obj: $(LSTRLIB_C) $(SRCDIR)\lua\lstrlib.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lstrlib.c

# Build LSTRING.C
LSTRING_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lstring.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\

lstring.obj: $(LSTRING_C) $(SRCDIR)\lua\lstring.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lstring.c

# Build LSTATE.C
LSTATE_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\ldo.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lgc.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llex.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lzio.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lstring.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\ltable.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\ltm.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\

lstate.obj: $(LSTATE_C) $(SRCDIR)\lua\lstate.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lstate.c

# Build LPARSER.C
LPARSER_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lcode.h\
	$(SRCDIR)\lua\llex.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lzio.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lopcodes.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lparser.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lzio.h\
	$(SRCDIR)\lua\lfunc.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llex.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lopcodes.h\
	$(SRCDIR)\lua\lparser.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lstring.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\

lparser.obj: $(LPARSER_C) $(SRCDIR)\lua\lparser.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lparser.c

# Build LOBJECT.C
LOBJECT_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\

lobject.obj: $(LOBJECT_C) $(SRCDIR)\lua\lobject.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lobject.c

# Build LMEM.C
LMEM_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\ldo.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\

lmem.obj: $(LMEM_C) $(SRCDIR)\lua\lmem.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lmem.c

# Build LLEX.C
LLEX_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\llex.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lzio.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lparser.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lzio.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lstring.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\ltable.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lzio.h\

llex.obj: $(LLEX_C) $(SRCDIR)\lua\llex.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\llex.c

# Build LGC.C
LGC_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\ldo.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lfunc.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lgc.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lstring.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\ltable.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\ltm.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\

lgc.obj: $(LGC_C) $(SRCDIR)\lua\lgc.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lgc.c

# Build LFUNC.C
LFUNC_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lfunc.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\

lfunc.obj: $(LFUNC_C) $(SRCDIR)\lua\lfunc.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lfunc.c

# Build LDO.C
LDO_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\ldebug.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\ldo.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lgc.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lparser.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lzio.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lstring.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\ltable.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\ltm.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lundump.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lzio.h\
	$(SRCDIR)\lua\lvm.h\
	$(SRCDIR)\lua\ldo.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\ltm.h\
	$(SRCDIR)\lua\lzio.h\

ldo.obj: $(LDO_C) $(SRCDIR)\lua\ldo.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\ldo.c

# Build LDEBUG.C
LDEBUG_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lapi.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lcode.h\
	$(SRCDIR)\lua\llex.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lzio.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lopcodes.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lparser.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lzio.h\
	$(SRCDIR)\lua\ldebug.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\ldo.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lfunc.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lopcodes.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lstring.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\ltable.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\ltm.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\luadebug.h\

ldebug.obj: $(LDEBUG_C) $(SRCDIR)\lua\ldebug.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\ldebug.c

# Build LDBLIB.C
LDBLIB_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lauxlib.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lualib.h\
	$(SRCDIR)\lua\lua.h\

ldblib.obj: $(LDBLIB_C) $(SRCDIR)\lua\ldblib.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\ldblib.c

# Build LCODE.C
LCODE_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lcode.h\
	$(SRCDIR)\lua\llex.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lzio.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lopcodes.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lparser.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lzio.h\
	$(SRCDIR)\lua\ldo.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\llex.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lopcodes.h\
	$(SRCDIR)\lua\lparser.h\

lcode.obj: $(LCODE_C) $(SRCDIR)\lua\lcode.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lcode.c

# Build LBASELIB.C
LBASELIB_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lauxlib.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lualib.h\
	$(SRCDIR)\lua\lua.h\

lbaselib.obj: $(LBASELIB_C) $(SRCDIR)\lua\lbaselib.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lbaselib.c

# Build LAUXLIB.C
LAUXLIB_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lauxlib.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\

lauxlib.obj: $(LAUXLIB_C) $(SRCDIR)\lua\lauxlib.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lauxlib.c

# Build LAPI.C
LAPI_C=\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lapi.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\ldo.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\luadebug.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lfunc.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lgc.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lmem.h\
	$(SRCDIR)\lua\llimits.h\
	$(SRCDIR)\lua\lua.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lstring.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\ltable.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\ltm.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\lstate.h\
	$(SRCDIR)\lua\lvm.h\
	$(SRCDIR)\lua\ldo.h\
	$(SRCDIR)\lua\lobject.h\
	$(SRCDIR)\lua\ltm.h\

lapi.obj: $(LAPI_C) $(SRCDIR)\lua\lapi.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\lua\lapi.c

# Build L-SPELL.C
L-SPELL_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

l-spell.obj: $(L-SPELL_C) $(SRCDIR)\l-spell.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\l-spell.c

# Build L-RANDOM.C
L-RANDOM_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

l-random.obj: $(L-RANDOM_C) $(SRCDIR)\l-random.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\l-random.c

# Build L-PLAYER.C
L-PLAYER_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

l-player.obj: $(L-PLAYER_C) $(SRCDIR)\l-player.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\l-player.c

# Build L-OBJECT.C
L-OBJECT_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

l-object.obj: $(L-OBJECT_C) $(SRCDIR)\l-object.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\l-object.c

# Build LOAD.C
LOAD_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

load.obj: $(LOAD_C) $(SRCDIR)\load.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\load.c

# Build L-MONST.C
L-MONST_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

l-monst.obj: $(L-MONST_C) $(SRCDIR)\l-monst.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\l-monst.c

# Build L-MISC.C
L-MISC_C=\
	$(SRCDIR)\lua\tolua.h\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

l-misc.obj: $(L-MISC_C) $(SRCDIR)\l-misc.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\l-misc.c

# Build INIT2.C
INIT2_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\
	$(SRCDIR)\init.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\script.h\
	$(SRCDIR)\angband.h\

init2.obj: $(INIT2_C) $(SRCDIR)\init2.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\init2.c

# Build INIT1.C
INIT1_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\
	$(SRCDIR)\init.h\
	$(SRCDIR)\h-basic.h\

init1.obj: $(INIT1_C) $(SRCDIR)\init1.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\init1.c

# Build GENERATE.C
GENERATE_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

generate.obj: $(GENERATE_C) $(SRCDIR)\generate.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\generate.c

# Build FILES.C
FILES_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

files.obj: $(FILES_C) $(SRCDIR)\files.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\files.c

# Build DUNGEON.C
DUNGEON_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

dungeon.obj: $(DUNGEON_C) $(SRCDIR)\dungeon.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\dungeon.c

# Build CMD6.C
CMD6_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\
	$(SRCDIR)\script.h\
	$(SRCDIR)\angband.h\

cmd6.obj: $(CMD6_C) $(SRCDIR)\cmd6.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\cmd6.c

# Build CMD5.C
CMD5_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\
	$(SRCDIR)\script.h\
	$(SRCDIR)\angband.h\

cmd5.obj: $(CMD5_C) $(SRCDIR)\cmd5.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\cmd5.c

# Build CMD4.C
CMD4_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

cmd4.obj: $(CMD4_C) $(SRCDIR)\cmd4.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\cmd4.c

# Build CMD3.C
CMD3_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

cmd3.obj: $(CMD3_C) $(SRCDIR)\cmd3.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\cmd3.c

# Build CMD2.C
CMD2_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

cmd2.obj: $(CMD2_C) $(SRCDIR)\cmd2.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\cmd2.c

# Build CMD1.C
CMD1_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

cmd1.obj: $(CMD1_C) $(SRCDIR)\cmd1.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\cmd1.c

# Build CAVE.C
CAVE_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

cave.obj: $(CAVE_C) $(SRCDIR)\cave.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\cave.c

# Build BIRTH.C
BIRTH_C=\
	$(SRCDIR)\angband.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\h-config.h\
	$(SRCDIR)\h-system.h\
	$(SRCDIR)\h-type.h\
	$(SRCDIR)\h-define.h\
	$(SRCDIR)\z-util.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-virt.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-form.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-rand.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\z-term.h\
	$(SRCDIR)\h-basic.h\
	$(SRCDIR)\config.h\
	$(SRCDIR)\defines.h\
	$(SRCDIR)\types.h\
	$(SRCDIR)\externs.h\

birth.obj: $(BIRTH_C) $(SRCDIR)\birth.c
	$(CC) -c $(CFLAGS) $(SRCDIR)\birth.c

# Build angband.res
ANGBAND_RC=\
	$(SRCDIR)\angband.ico\

angband.res:	$(ANGBAND_RC) $(SRCDIR)\angband.rc
	$(RC) -I$(SRCDIR) $(SRCDIR)\angband.rc

